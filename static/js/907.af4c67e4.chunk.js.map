{"version":3,"file":"static/js/907.af4c67e4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n","import propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    setName('');\n    setNumber('');\n  };\n  \n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formLabel}>\n        Enter a name and phone number to add a contact{' '}\n      </label>\n      <input\n        className={css.formName}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChange}\n      />\n      {/* <label className={css.formLabel}>Number </label> */}\n      <input\n        className={css.formNumber}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleChange}\n      />\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  handleSubmit: propTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\",\"contactListItem\":\"ContactList_contactListItem__3th7-\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { delContact } from 'redux/contacts/operations';\nimport propTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n  \n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(delContact(id));\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} className={css.contactListItem}>\n              {name}: {number}\n              <button\n                type=\"button\"\n                className={css.contactListItemBtn}\n                onClick={() => handleDelete(id)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n          // ))}\n        })}\n      </ul>\n    </div>\n  );\n};\n\n\nContactList.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n    })\n  ),\n  handleDelete: propTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport propTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n        placeholder=\"Find contacts by name\"\n      />\n    </label>\n  );\n};\n\n\nFilter.propTypes = {\n  filter: propTypes.string.isRequired,\n  handleChange: propTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <>\n          \n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n          <ContactList />\n         \n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","className","css","onSubmit","preventDefault","findIndex","contact","alert","addContact","type","pattern","title","required","placeholder","onChange","ContactList","filteredContacts","normalizedFilter","toLowerCase","includes","findContacts","map","id","onClick","delContact","handleDelete","Filter","e","setFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}